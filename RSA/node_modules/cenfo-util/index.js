function no_imp(){
  // funcion dummy
  return ("no implementado");
}

function gdc(a,b){
  if (a == 0)
    return b;
  return gdc(b%a, a);
}

function obtener_e(e,p,q){
  // TODO implementar
  // e es la llave publica

  //return gdc(e,(p-1)*(q-1))

  if (gdc(e,obtener_z(p,q))===1)
    return e;
  else
    return 0;
}

function obtener_d(e,p,q){
  // TODO Implementar
  // d es la llave privada

  //var d = e^-1 mod (p-1)(q-1)
    //var d = (square(e,-1)%obtener_z(p,q));
    console.log("cuadrado "+cuadrado(e,-1));
    console.log("Obt Z "+obtener_z(p,q));
    var d = (cuadrado(e,-1)) % (obtener_z(p,q));

  return (d);
}

function obtener_z(p,q){
  var z =(p-1)*(q-1);
  return z;
}

function obtener_n(p,q){
  // TODO implementar
  return (p*q);
}

function cuadrado(n,m){
  var res = Math.pow(n,m);
  return res;
}

function obtener_codigo_ascci(l){
  var ml =l.charCodeAt(0);
  ml = ml.toString().padStart(4,"0");

  //return ml;
  return "8";
}

function obtener_caracter(l){
  String.fromCharCode(l);
}

exports.no_imp=no_imp;
exports.gdc=gdc;
exports.e=obtener_e;
exports.d=obtener_d;
exports.n=obtener_n;
exports.z=obtener_z;
exports.square = cuadrado;
exports.Conv_Ascci = obtener_codigo_ascci;
exports.Conv_Char = obtener_caracter;
